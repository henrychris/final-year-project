@page "/user/{id:int}"

<h3>
    @Email
</h3>
@*TODO if user id matches the logged in user, redirect to /profile page*@
@*TODO what if a person changes the url to match a user who doesn't want messages?*@

@if (AcceptsMessages)
{
    <button class="btn-primary" @onclick="NavigateToUserChat">Send Message</button>
}
else
{
    <p> Sorry, this user does not accept messages.</p>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private string Email { get; set; }
    private bool AcceptsMessages { get; set; }

    private void NavigateToUserChat()
    {
        // Id represents the person we want to send a message to.
        NavigationManager.NavigateTo($"messages/{Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        var user = await UserService.GetById(Id);
        Email = user.Data.Email;
        AcceptsMessages = await UserService.CheckIfUserAcceptsMessages(Id);

        var state = await StateProvider.GetAuthenticationStateAsync();
        var stateUser = state.User;
        var CurrentUserId = Convert.ToInt32(stateUser.Claims.Where(a => a.Type == ClaimTypes.NameIdentifier).Select(a => a.Value).FirstOrDefault());

        if (CurrentUserId == Id) NavigationManager.NavigateTo("/profile");
    }
}
