@page "/"
@page "/search/{searchText}/{page:int}"
@page "/{categoryUrl}"
@inject IProductService ProductService

<PageTitle>My Shop</PageTitle>

@if (SearchText == null && CategoryUrl == null)
{
    <AuthorizeView>
        <NotAuthorized>
            <FeaturedProducts />
        </NotAuthorized>
        <Authorized>
            <RecommendedProducts />
        </Authorized>
    </AuthorizeView>
}
else
{
    <ProductList />
}

@code {
    [Parameter]
    public string? CategoryUrl { get; set; } = null;

    [Parameter]
    public string? SearchText { get; set; } = null;

    [Parameter]
    public int Page { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        StateHasChanged();
        if (SearchText != null)
        {
            await ProductService.SearchProducts(SearchText, Page);
        }
        else
        {
            try
            {
                await ProductService.GetProducts(CategoryUrl);
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
            }

        }
    }
}
